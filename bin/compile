#!/usr/bin/env bash
# This script gets called **every restart**
set -e

readonly THIS_FILE=${0}
readonly BUILD_DIR=${1}
readonly CACHE_DIR=${2}
readonly ENV_DIR=${3}

mkdir --parents \
  ${BUILD_DIR} \
  ${CACHE_DIR} \
  ${ENV_DIR}

# First, set up vector
if !(test -f ${BUILD_DIR}/bin/vector); then
  echo "Fetching and extracting Vector (musl, latest stable)"
  # Use the latest MUSL stable.
  # This is to avoid any gnarly libc issues.
  curl \
    --location \
    --output ${BUILD_DIR}/vector.tar.gz \
    https://packages.timber.io/vector/latest/vector-0.11.1-x86_64-unknown-linux-musl.tar.gz
  # Goes to /bin/vector for the user
  tar \
    --extract \
    --verbose \
    --file ${BUILD_DIR}/vector.tar.gz \
    --strip-components=2 \
    --directory ${BUILD_DIR} \
    ./vector-x86_64-unknown-linux-musl/bin/vector

  # Clean up
  echo "Clean up"
  rm --verbose ${BUILD_DIR}/vector.tar.gz

else
  echo "Using cached \`vector\`"
fi

# Figure out which config to use.
# Heroku does this weird thing where they pass env vars as files.
# See https://devcenter.heroku.com/articles/buildpack-api#bin-compile-summary
if (test -f "${ENV_DIR}/VECTOR_TOML_URL"); then
  readonly VECTOR_TOML_URL=`cat ${ENV_DIR}/VECTOR_TOML_URL`
    echo "Detected buildpack env \${VECTOR_TOML_URL} = `cat ${ENV_DIR}/VECTOR_TOML_URL`"
fi

# If a URL exists, always refresh it.
if !(test -z "${VECTOR_TOML_URL}"); then
  echo "Found \`\${VECTOR_TOML_URL} = ${VECTOR_TOML_URL}\`"

  echo "Fetching \`\${VECTOR_TOML_URL}\` to \`${BUILD_DIR}/vector.toml\`"
  curl \
    --location \
    --output ${BUILD_DIR}/vector.toml \
    ${VECTOR_TOML_URL}

elif (test -f ${BUILD_DIR}/vector.toml); then
  echo "Using \`${BUILD_DIR}/vector.toml\`"

else
  echo "Adding Vector without a \`./vector.toml\` or \`\${VECTOR_TOML_URL}\`."
  echo "This is unsupported."
  exit 1
fi

echo ""
echo "Configuration is:"
cat vector.toml
echo ""

# Make sure this script is always provisioned.
if !(test -f ${BUILD_DIR}/bin/refresh-vector); then
  cp --verbose ${THIS_FILE} ${BUILD_DIR}/bin/refresh-vector
fi

exit 0
